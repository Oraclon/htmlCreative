:root {
  --body: #1f2124;
  --container: #22262b;
  --input: #282b2f;
  --color: #ffffff;
  --defaultColor: #1868db;
  --accent: orange;
  --borderRadius: .6rem;
  --padGap: .6rem;
}

html, body {
  width: 100%;
  height: 100%;
  background: var(--body);
  margin: 0;
  padding: 0;
  font-family: "Play", sans-serif;
  font-weight: 400;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

* {
  box-sizing: border-box;
  overflow: hidden;
}

.tagItem {
  padding: 0.4rem 0.6rem;
  border-radius: var(--borderRadius);
  font-size: 0.8em;
  background: var(--defaultColor);
  color: var(--color);
  width: -moz-fit-content;
  width: fit-content;
  height: -moz-fit-content;
  height: fit-content;
  cursor: pointer;
}

input,
textarea,
button {
  width: 100%;
  padding: 0.8rem;
  outline: none;
  border: none;
  color: var(--color);
  border-radius: var(--borderRadius);
}
input:focus,
textarea:focus,
button:focus {
  outline: none;
  border: none;
}

textarea {
  height: -moz-fit-content;
  height: fit-content;
  resize: none;
}
textarea.huge {
  min-height: 200px;
}

input, textarea {
  background: var(--input);
}

button {
  background: var(--defaultColor);
  font-weight: 700;
  cursor: pointer;
}
button.orange {
  background: var(--accent);
  max-width: 200px;
}

form {
  display: grid;
  align-content: start;
  gap: var(--padGap);
  grid-auto-rows: min-content;
}

fieldset {
  display: grid;
  align-content: start;
  gap: var(--padGap);
  padding: var(--padGap);
  border: 0.4px solid var(--accent);
  border-radius: var(--borderRadius);
}
fieldset > legend {
  color: var(--color);
  font-weight: 700;
}

.interaction {
  transition: 0.4s ease;
  cursor: pointer;
}
.interaction:hover {
  color: var(--accent);
}

.knowledgeItem {
  display: grid;
  grid-template-rows: min-content min-content;
  grid-template-columns: repeat(1, 1fr);
  gap: var(--padGap);
  border-radius: var(--borderRadius);
  background: var(--body);
  border: 1px solid var(--body);
  color: var(--color);
  font-weight: 700;
  font-size: 1.6em;
  cursor: pointer;
  padding: 1rem;
  transition: 0.4s ease;
}
.knowledgeItem:hover {
  border: 1px solid orange;
}
.knowledgeItem .knowledgeHeader {
  grid-row: 1;
  min-height: 150px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}
.knowledgeItem .knowledgeTags {
  grid-row: 2;
  display: flex;
  gap: var(--padGap);
  flex-wrap: wrap;
  font-size: 0.5em;
}

.actionStep {
  padding: 1.5rem;
  background: var(--body);
  border-radius: var(--borderRadius);
  color: var(--color);
  font-size: 1em;
}

.actionButton {
  position: absolute;
  bottom: 1rem;
  right: 1rem;
  width: 50px;
  height: 50px;
  background: var(--defaultColor);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.actionStep {
  padding: 1.5rem;
  background: var(--body);
  border-radius: var(--borderRadius);
  color: var(--color);
  font-size: 1em;
  cursor: grab;
}
.actionStep:active {
  cursor: grabbing;
}

.knowledgeContainer {
  position: relative;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-rows: repeat(1, 1fr);
  grid-template-columns: min-content auto;
  gap: var(--padGap);
  padding: var(--padGap);
}
.knowledgeContainer > .filtersContainer, .knowledgeContainer > .knowledgeItemsContainer, .knowledgeContainer > .knowledgeItemViewer {
  background: var(--container);
  border-radius: var(--borderRadius);
  padding: var(--padGap);
}
.knowledgeContainer > .knowledgeItemsContainer, .knowledgeContainer > .knowledgeItemViewer {
  position: relative;
  display: grid;
  grid-column: 2;
  gap: var(--padGap);
  color: var(--color);
}
.knowledgeContainer > .knowledgeItemsContainer.hidden, .knowledgeContainer > .knowledgeItemViewer.hidden {
  display: none;
}
.knowledgeContainer > .filtersContainer {
  grid-column: 1;
  min-width: 16vw;
  display: grid;
  grid-template-rows: min-content auto;
  grid-template-columns: repeat(1, 1fr);
  gap: var(--padGap);
}
.knowledgeContainer > .filtersContainer > .filterItems {
  grid-row: 1;
}
.knowledgeContainer > .filtersContainer > .tagsContainer {
  grid-row: 2;
  display: flex;
  gap: var(--padGap);
  flex-wrap: wrap;
  overflow-y: auto;
  align-content: start;
}
.knowledgeContainer > .knowledgeItemsContainer {
  grid-template-columns: repeat(4, 1fr);
  align-content: start;
  overflow-y: auto;
}
.knowledgeContainer > .knowledgeItemViewer {
  grid-template-columns: repeat(1, 1fr);
  grid-template-rows: min-content min-content auto min-content;
}
.knowledgeContainer > .knowledgeItemViewer > div {
  padding: var(--padGap);
}
.knowledgeContainer > .knowledgeItemViewer > .head {
  grid-row: 1;
  display: grid;
  grid-template-columns: min-content auto min-content;
  grid-template-rows: repeat(1, 1fr);
  gap: 2rem;
  align-items: center;
}
.knowledgeContainer > .knowledgeItemViewer > .head > .itemTitleAndReference {
  border-left: 2px solid var(--color);
  padding-left: 2rem;
}
.knowledgeContainer > .knowledgeItemViewer > .head > .itemTitleAndReference > .itemTitle {
  margin-bottom: 0.6rem;
  font-weight: 700;
  font-size: 1.2em;
}
.knowledgeContainer > .knowledgeItemViewer > .head > .itemTitleAndReference > .itemReference {
  font-size: 0.8em;
}
.knowledgeContainer > .knowledgeItemViewer > .tags {
  display: flex;
  width: -moz-fit-content;
  width: fit-content;
  gap: var(--padGap);
  background: var(--body);
  border-radius: var(--borderRadius);
}
.knowledgeContainer > .knowledgeItemViewer > .body {
  grid-row: 3;
  display: grid;
  align-content: start;
  grid-auto-rows: min-content;
  gap: var(--padGap);
  overflow-y: auto;
}
.knowledgeContainer > .knowledgeItemViewer > .footer {
  grid-row: 4;
  display: flex;
  gap: var(--padGap);
}

.formContainer {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background: rgba(15, 15, 15, 0.4);
}
.formContainer .formBody {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  max-width: 600px;
  padding: 1rem;
  background: var(--container);
  border-radius: var(--borderRadius);
}
.formContainer.hidden {
  display: none;
}/*# sourceMappingURL=main.css.map */